{{ 'module-tabs.css' | asset_url | stylesheet_tag }}

{% assign overline = section.settings.overline %}
{% assign title = section.settings.title %}

<div class="module-tab_container container" data-js-element="tab-module-{{ section.id }}">
  <div class="padding-vertical padding-huge">
    <div class="module-tab_header">
      {% render 'module-header', overline: overline, title: title %}
    </div>

    {% assign numberOfBlocks = section.blocks | size %}

    {% if numberOfBlocks > 0 %}
      <div class="module-tab_tabs-header_container margin-top margin-large">
        <div class="module-tab_tabs-header" data-js-element="tab-header-container">
          {% for block in section.blocks %}
            <div data-index="{{ forloop.index0 }}" data-js-element="tab-header" class="tab-header center padding-vertical padding-medium {% if forloop.first %}is-active{% endif %}">
              <img src="{{ block.settings.icon_url }}" alt="{{ block.settings.tab_text }}" />
              <p class="padding-top padding-xsmall text-color-grey-500">{{ block.settings.tab_text }}</p>
              <div class="tab-header_progress-bar"></div>
            </div>
          {% endfor %}    
        </div>
      </div>
    {% endif %}

    {% if numberOfBlocks > 0 %}
      <div class="module-tab_tabs-content margin-top margin-large padding-large background-color-grey-50">
        {% for block in section.blocks %}
          <div data-index="{{ forloop.index0 }}" data-js-element="tab-content" class="module-tab_tabs-block {% if forloop.first %}is-active{% endif %}">
            <div class="tab-block_img margin-bottom mobile-margin-small">
              {{ block.settings.image | image_url: width: 800 | image_tag:
                loading: 'lazy',
                widths: '550, 720, 990, 1100, 1500, 2200, 3000'
              }}
            </div>
            <div class="tab-block_content">
              <h3 class="heading-style-h2 margin-bottom margin-small">{{ block.settings.title }}</h3>
              <p class="text-color-grey-500 margin-bottom margin-medium">{{ block.settings.body }}</p>
              <a 
                class="button secondary margin-top mobile-margin-xsmall" 
                href="{{ block.settings.cta_link }}"
              >
                <span>{{ block.settings.cta_text }}</span>
              </a>
            </div>
          </div>
        {% endfor %}    
      </div>
    {% endif %}
  </div>
</div>

<script type="module">
  const initTabs = () => {
    // get tab module for given section
    const tabModule = document.querySelector('[data-js-element="tab-module-{{ section.id }}"]');

    // get tab headers and tab contents
    const tabHeaders = Array.from(tabModule.querySelectorAll('[data-js-element="tab-header"]'))
    const tabContents = Array.from(tabModule.querySelectorAll('[data-js-element="tab-content"]'))
    const tabHeaderContainer = tabModule.querySelector('[data-js-element="tab-header-container"]')

    tabHeaders.forEach(header => {
      header.addEventListener('click', () => {
        // get index of clicked tab header
        const index = header.dataset.index;
        // get current active index
        const activeIndex = tabHeaders.findIndex(header => header.classList.contains('is-active'))

        // remove active class from current active tab header and tab content
        tabHeaders.forEach(header => header.classList.remove('is-active'))
        tabContents.forEach(content => content.classList.remove('is-active'))

        // add active class to clicked tab header and tab content
        header.classList.add('is-active')
        tabContents[index].classList.add('is-active')

        // get width of tab header container
        const headerWidth = header.offsetWidth;
        // get offset of clicked tab header
        const amountToTranslate = +activeIndex === 1 && +index === 0 ? 30 : headerWidth * +index;
        
        if (window.innerWidth > 900 || index >= tabHeaders.length - 1) return

        // translate tab header container
        tabHeaderContainer.style.transform = `translateX(-${amountToTranslate - 30}px)`;
      })
    })
  }

  initTabs()
</script>

{% schema %}
{
  "name": "Tabs",
  "tag": "section",
  "class": "section section-tabs",
  "settings": [
    {
      "type": "text",
      "id": "overline",
      "default": "How we do it",
      "label": "Overline"
    },
    {
      "type": "richtext",
      "id": "title",
      "default": "<p>The <em>best</em> gifting service in Canada</p>",
      "label": "Title"
    }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "Tab",
      "limit": 5,
      "settings": [
        {
          "type": "url",
          "id": "icon_url",
          "label": "Icon URL"
        },
        {
          "type": "text",
          "id": "tab_text",
          "label": "Tab Text"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title"
        },
        {
          "type": "textarea",
          "id": "body",
          "label": "Body"
        },
        {
          "type": "text",
          "id": "cta_text",
          "label": "CTA Text"
        },
        {
          "type": "url",
          "id": "cta_link",
          "label": "CTA Link"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Tabs"
    }
  ]
}
{% endschema %}
