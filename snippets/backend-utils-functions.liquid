<script type="module">
  
  
  import wretch from 'https://cdn.skypack.dev/wretch/dist/bundle/wretch.all.min.mjs'
  

  const backendURL = 'http://localhost:8080'

  {% comment %} 'http://localhost:8080' {% endcomment %}
  {% comment %} 'https://foodiepages.herokuapp.com' {% endcomment %}

  window.generateError = (message) => {
    {% comment %} generate global popup for error handling {% endcomment %}
    {% comment %} const loadingSpinner = document.querySelector('.loading-spinner')
    const getLoadingMessage = document.querySelector('.loading-container p')
    loadingSpinner.style.display = 'none'
    getLoadingMessage.innerHTML = message {% endcomment %}
  }
  
  window.getSosCustomers = async (id) => {
    const url = id ? `${backendURL}/api/sos_customer?id=${id}` : `${backendURL}/api/sos_customer`;

    const pageData = await wretch(url) // Base url
      // Authorization header
      .get() // GET request
      .badRequest((err) => {
        console.log('400', err);
        throw err;
      }) // Handle 400 errors
      .unauthorized((err) => {
        console.log('401', err);
        throw err;
      }) // Handle 401 errors
      .notFound((err) => {
        window.generateError(`Something went wrong while trying to get your SOS Customers. Please contact your developer.`);
        throw err;
      }) // Handle 404 errors
      .internalError((err) => {
        console.log('500', err);
        throw err;
      }) // Handle 500 errors
      .res((res) => res.json()); // Parse response as JSON

    return pageData;
  }


  window.getShopifyProducts = async (ids) => {

    const pageData = await wretch(`${backendURL}/api/get-shopify-collections`)
      .post(ids)
      .badRequest((err) => {
        console.log('400', err)
        throw err;
      }) // Handle 400 errors
      .unauthorized((err) => {
        console.log('401', err)
        throw err;
      }) // Handle 401 errors
      .notFound((err) => {
        console.log('404', err)
        throw err;
      }) // Handle 404 errors
      .internalError((err) => {
        console.log('500', err)
        throw err;
      }) // Handle 500 errors
      .res((res) => res.json()); // Parse response as JSON

    if (!pageData.data.products) {
      return 'No Products';
    }

    return pageData.data.products;
  }

  window.getSosSalesOrder = async (query) => {
    const url = query ? `${backendURL}/api/get-sale-orders?query=${query}` : `${backendURL}/api/get-sale-orders`;
  
    const pageData = await wretch(url) // Base url
      // Authorization header
      .get() // GET request
      .badRequest((err) => {
        console.log('400', err);
        throw err;
      }) // Handle 400 errors
      .unauthorized((err) => {
        console.log('401', err);
        throw err;
      }) // Handle 401 errors
      .notFound((err) => {
        window.generateError(`Something went wrong while trying to get your SOS Customers. Please contact your developer.`);
        throw err;
      }) // Handle 404 errors
      .internalError((err) => {
        console.log('500', err);
        throw err;
      }) // Handle 500 errors
      .res((res) => res.json()); // Parse response as JSON

    return pageData;
  }

  window.getSosItems = async (ids) => {

    {% comment %} if ids is an array turn into a comma separated list {% endcomment %}
    if (Array.isArray(ids)) {
      ids = ids.join(',');
    }

    const url = ids ? `${backendURL}/api/get-sos-item?ids=${ids}` : `${backendURL}/api/get-sos-item`;

    const pageData = await wretch(url) // Base url
      // Authorization header
      .get() // GET request
      .badRequest((err) => {
        console.log('400', err);
        throw err;
      }) // Handle 400 errors
      .unauthorized((err) => {
        console.log('401', err);
        throw err;
      }) // Handle 401 errors
      .notFound((err) => {
        window.generateError(`Something went wrong while trying to get your SOS Customers. Please contact your developer.`);
        throw err;
      }) // Handle 404 errors
      .internalError((err) => {
        console.log('500', err);
        throw err;
      }) // Handle 500 errors
      .res((res) => res.json()); // Parse response as JSON

    return pageData;
  }

</script>
