<script src="{{ 'inview.min.js' | asset_url }}"></script>
<script src="https://unpkg.com/split-type"></script>
<script
  src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.10.4/gsap.min.js"
  integrity="sha512-VEBjfxWUOyzl0bAwh4gdLEaQyDYPvLrZql3pw1ifgb6fhEvZl9iDDehwHZ+dsMzA0Jfww8Xt7COSZuJ/slxc4Q=="
  crossorigin="anonymous"
  referrerpolicy="no-referrer"
></script>

<style>
  .line {
    transform: translateY(107%) skewY(2deg);
    opacity: 0;
  }

  .line-wrapper {
    overflow: hidden;
  }

  .overline {
    opacity: 0;
    transform: translateY(40px);
  }

  .animation-stagger {
    opacity: 0;
    transform: translateY(20px);
  }

  [data-js-element="animated-section"] small,
  [data-js-element="animated-section"] h1,
  [data-js-element="animated-section"] h2,
  [data-js-element="animated-section"] p,
  [data-js-element="animated-section"] .field-group,
  [data-js-element="animated-section"] [data-js-element="cf-product-card"] {
    opacity: 0;
    transform: translateY(20px);
  }

  [data-js-element="animated-section"] .cf-header_image {
    opacity: 0;
    transform: scale(1.1);
  }

  .sticky-banner {
    transform: translateY(100%);
  }

  .mega-menu[open] [data-js-element="animation-stagger-parent"] [data-js-element] {
    opacity: 1;
    transform: translateY(0);
    transition-property: transform, opacity;
    transition-duration: 1s;
    transition-timing-function: ease;
  }

  .mega-menu[open] [data-js-element="animation-stagger-parent"] [data-js-element]:nth-child(1),
  [data-stagger-delay="100"] {
    transition-delay: 0.1s;
  }

  .mega-menu[open] [data-js-element="animation-stagger-parent"] [data-js-element]:nth-child(2),
  [data-stagger-delay="200"] {
    transition-delay: 0.2s;
  }

  .mega-menu[open] [data-js-element="animation-stagger-parent"] [data-js-element]:nth-child(3),
  [data-stagger-delay="300"] {
    transition-delay: 0.3s;
  }

  .mega-menu[open] [data-js-element="animation-stagger-parent"] [data-js-element]:nth-child(4),
  [data-stagger-delay="400"] {
    transition-delay: 0.4s;
  }

  .mega-menu[open] [data-js-element="animation-stagger-parent"] [data-js-element]:nth-child(5),
  [data-stagger-delay="500"] {
    transition-delay: 0.5s;
  }

  .mega-menu[open] [data-js-element="animation-stagger-parent"] [data-js-element]:nth-child(6),
  [data-stagger-delay="600"] {
    transition-delay: 0.6s;
  }

  .mega-menu:not([open]) [data-js-element="animation-stagger-parent"] [data-js-element] {
    opacity: 0 !important;
    transform: translateY(20px) !important;
  }

  {% comment %} Image zoom image {% endcomment %}

  .image-overflow-hidden {
    overflow: hidden;
    border-radius: 1rem;
    display: flex;
  }

  .image-overflow-hidden:hover img {
    transform: scale(1.075);
  }

  .image-overflow-hidden img {
    transition: transform 0.5s var(--custom-easing);
  }
</style>

<script type="module">
  
  CSSPlugin.defaultTransformPerspective = 1200;

  const initAnimation = () => {
    const staggerGroups = Array.from(document.querySelectorAll('.shopify-section'))
    const richTextHeadings = Array.from(document.querySelectorAll('h1 > *, h2 > *'))
    const regularHeadings = Array.from(document.querySelectorAll('h1'));
    const h1h2Headings = Array.from(document.querySelectorAll('h1, h2'));

    const filteredRegularHeadings = regularHeadings.filter(heading => {
      return !heading.querySelector('span, a, p')
    })

    // @TODO: Get all h1 and h2 HTML elements on the page with no children in it
    
    const headings = [
      ...richTextHeadings, 
      ...filteredRegularHeadings
    ]

    if (!staggerGroups.length) return

    new SplitType(headings, {
      types: 'words, lines',
      linesClass: 'gsap-stagger-line',
    })

    h1h2Headings.forEach(h => h.style.opacity = 1);

    Array.from(document.querySelectorAll('.line')).forEach(line => {
      const wrapper = document.createElement('div')
      wrapper.classList.add('line-wrapper')
      line.parentNode.insertBefore(wrapper, line)
      wrapper.appendChild(line)
    })

    inView.threshold(0.2) 

    inView('.shopify-section').on('enter', (section) => {
      const sectionId = section.id
      const overlines = Array.from(section.querySelectorAll('.overline'))
      const lines = section.querySelectorAll('.line');

      gsap.to([...overlines, ...section.querySelectorAll('.line')], {
        y: '0%',
        opacity: 1,
        duration: 1,
        ease: 'power4.out',
        transform: 'skewY(0deg)',
        stagger: {
          each: 0.2,
          from: 'start',
        },
      })
    })


    const staggerMenuElements = () => {
      const menuParents = Array.from(document.querySelectorAll('[data-js-element="animation-stagger-parent"]'))

      menuParents.forEach(parent => {
        const menuChilds = Array.from(parent.querySelectorAll('[data-js-element="animation-stagger-child"]'))
        menuChilds.forEach((child, index) => child.style.transitionDelay = `${index * 0.1}s`)
      })
    }

    {% comment %} staggerMenuElements(); {% endcomment %}
  }

  const initCampaignFormAnimation = () => {
    {% comment %} data-js-element="animated-section" {% endcomment %}

    gsap.to('.loading', {
      transform: 'translateY(-100%)',
      ease: 'power4.out',
    })

    inView('[data-js-element="animated-section"]').on('enter', (section) => {
      {% comment %} get all h1, p, small {% endcomment %}
      const children = Array.from(section.querySelectorAll('small, h1, h2, p, [data-js-element="cf-product-card"], .field-group'))
      {% comment %} find cf-header_image {% endcomment %}
      const headerImage = section.querySelector('[data-js-element="animated-section"] .cf-header_image')

      gsap.to(children, {
        y: '0%',
        opacity: 1,
        duration: 1,
        ease: 'power4.out',
        transform: 'skewY(0deg)',
        stagger: {
          each: 0.2,
          from: 'start',
        },
      })

      gsap.to(headerImage, {
        y: '0%',
        opacity: 1,
        duration: 1,
        ease: 'power4.out',
        transform: 'scale(1)',
        delay: 0.5,
      })      
    })

    {% comment %} animate sticky-banner {% endcomment %}
    gsap.to('.sticky-banner', {
      y: '0%',
      duration: 0.5,
      ease: 'power4.out',
      transform: 'translateY(0)',
      delay: 1,
    })
    
  }

  if (!window.location.href.includes('form?client')) {
    initAnimation()
  }

  {% comment %} animate the campaign form {% endcomment %}
  document.addEventListener('campaign-form-loading', (e) => {
    const isLoading = e.detail;

    if (isLoading === false) {
      initCampaignFormAnimation()
    }
  })

</script>
