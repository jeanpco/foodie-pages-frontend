<script type="module">
  
  const initDialog = () => {
    const dialog = document.querySelector('.dialog-modal');
    const dialogContainer = dialog.querySelector('.dialog-modal-container');

    const openDialog = (dialogType) => {
      dialog.setAttribute('aria-expanded', true);
      dialog.setAttribute('aria-controls', dialogType);
    };

    const closeDialog = () => {
      dialog.setAttribute('aria-expanded', false);
      dialog.setAttribute('aria-controls', 'dialog');
    };


    window.customFunctions.closeDialog = closeDialog;

    const toggleDialog = () => {
      dialog.setAttribute('aria-expanded', dialog.getAttribute('aria-expanded') === 'true' ? 'false' : 'true');
    };

    // get links that can open the popup
    const downloadCatalogueLinks = [...document.querySelectorAll('a[href*="#download-catalogue"]')];
    const contactLinks = [...document.querySelectorAll('a[href*="#contact"]')];
    const corporateContactLinks = [...document.querySelectorAll('a[href*="#corporate-contact"]')];

    // reveal the download-catalogue form
    downloadCatalogueLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        openDialog('download-catalogue');
      });
    });

    // reveal the contact form
    contactLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        openDialog('contact_form');
      });
    });

    // reveal the corporate contact form
    corporateContactLinks.forEach(link => {
      link.addEventListener('click', (e) => {
        e.preventDefault();
        openDialog('corporate_contact_form');
      });
    });

    // reveal the view-order form

    window.customFunctions.viewOrder = () => {
      const viewOrderLinks = [...document.querySelectorAll('a[href*="view-order"]')];

      viewOrderLinks.forEach(link => {
        link.addEventListener('click', (e) => {
          e.preventDefault();
          openDialog('view-order');
        });
      });
    };

    // reveal the gift-message form

    window.customFunctions.attachGiftMessageModalEvent = () => {
      const giftMessageLinks = document.querySelectorAll('a[href*="gift-message"]');
      
      giftMessageLinks.forEach(link => {
        link.addEventListener('click', (e) => {
          e.preventDefault();
          openDialog('gift-message');
        });
      });
    };

    window.customFunctions.attachGiftMessageModalEvent();
    window.customFunctions.viewOrder();

    // close the dialog when clicking on the close button
    dialog.querySelector('.dialog-modal--close').addEventListener('click', (e) => {
      e.preventDefault();
      closeDialog();
    });

    // close the dialog when clicking outside of dialogContainer
    dialog.addEventListener('click', (e) => {
      if (e.target === dialog) {
        closeDialog();
      }
    });

    // close the dialog when pressing escape
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        closeDialog();
      }
    });

    const initDownloadFromForm = () => {
      const currentAnchor = window.location.hash;
      const currentAnchorWithoutHash = currentAnchor.replace('#', '');

      if (!sessionStorage) return;

      sessionStorage.setItem('form_submitted', currentAnchorWithoutHash);
      
      window.readFormSessionStorage && window.readFormSessionStorage();
    }

    // get if the download was successful, if so, show the success message on a open dialog
    const readFormSessionStorage = () => {
      const formSessionStorage = sessionStorage.getItem('form_submitted');

      if (formSessionStorage) {
        openDialog(formSessionStorage);
      }
    }

    {% comment %} re-open corporate form success after succesfully submitted {% endcomment %}

    const corporateFormSuccess = () => {
      const formSessionStorage = sessionStorage.getItem('form_submitted');
      
      if (formSessionStorage !== 'download-catalogue') {
        openDialog('corporate_contact_form');
      }
    }

    window.readFormSessionStorage = readFormSessionStorage;
    window.initDownloadFromForm = initDownloadFromForm;
    window.corporateFormSuccess = corporateFormSuccess;
  }

  initDialog()
</script>

<dialog class="dialog-modal" role="dialog" aria-expanded="false" aria-controls="dialog" aria-label="dialog" aria-description="Handles contact form, download catalog form and add gift message form">
  <div class="dialog-modal-container background-color-secondary padding-medium">
    <button class="dialog-modal--close padding-medium">{% render 'icon-x' %}</button>

    <div class="download-catalogue-form">
      {% render 'download-catalogue-form', id: section.id %}
    </div>

    <div class="contact-form">
      {% render 'contact-form', id: section.id %}
    </div>

    <div class="corporate-contact-form">
      {% render 'corporate-contact-form', id: section.id %}
    </div>

    <div class="gift-message-form">
      {% render 'gift-message-form', id: section.id %}
    </div>

    <div class="view-order">
      {% render 'view-order', id: section.id %}
    </div>

  </div>
</dialog>

<style>

  .dialog-modal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    z-index: 100;
    display: none;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,.25);
    overflow: auto;
    box-sizing: border-box;
  }

  .dialog-modal--close {
    position: absolute;
    top: 0;
    right: 0;
    background: transparent;
    border: none;
    cursor: pointer;
    z-index: 1;
  }

  .dialog-modal-container {
    width: 48rem;
    border-radius: 24px;
    height: auto;
    position: absolute;
    top: 5rem;
    left: 50%;
    transform: translateX(-50%);
  }

  /* max-width 800px */

  @media screen and (max-width: 800px) {

    .dialog-modal {
      top: 0;
      left: 0;
      transform: translate(0, 0);
      background: var(--color-secondary);
      padding: 0;
      overflow: initial;
    }

    .dialog-modal-container {
      width: 100%;
      height: auto;
      top: 0;
      left: 0;
      transform: translateX(0);
      border-radius: 0;
      position: unset;
      overflow: auto;
    }
  }

  .dialog-modal[aria-expanded="true"] {
    display: flex;
  }

  @media screen and (min-width: 801px) {
    .dialog-modal[aria-expanded="true"] .dialog-modal-container {
      animation: dialog-modal-container 0.5s var(--custom-easing);
    }
  }

  @keyframes dialog-modal-container {
    0% {
      opacity: 0;
      transform: translate(-50%, 30px);
    }
    100% {
      opacity: 1;
      transform: translate(-50%, 0);
    }
  }

  .download-catalogue-form,
  .corporate-contact-form,
  .contact-form,
  .view-order,
  .gift-message-form {
    display: none;
  }

  .dialog-modal[aria-controls="download-catalogue"] .download-catalogue-form,
  .dialog-modal[aria-controls="contact_form"] .contact-form,
  .dialog-modal[aria-controls="corporate_contact_form"] .corporate-contact-form,
  .dialog-modal[aria-controls="view-order"] .view-order,
  .dialog-modal[aria-controls="gift-message"] .gift-message-form {
    display: block;
  }

  .dialog-modal .field-wrapper {
    flex-direction: column;
    gap: 1.5rem;
  }

  .dialog-modal .contact-submit-button {
    display: block;
    margin: 0 auto;
  }
</style>